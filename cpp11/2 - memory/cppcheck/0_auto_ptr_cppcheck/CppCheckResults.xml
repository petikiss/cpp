<?xml version="1.0" encoding="UTF-8" ?>
<results version="2">
    <cppcheck version="1.82" />
    <errors>
        <error id="noCopyConstructor" severity="style" msg="struct &apos;X&apos; does not have a copy constructor which is recommended since the class contains a pointer to allocated memory." verbose="struct &apos;X&apos; does not have a copy constructor which is recommended since the class contains a pointer to allocated memory." cwe="398">
            <location file="main.cpp" line="26" />
        </error>
        <error id="mismatchAllocDealloc" severity="error" msg="Mismatching allocation and deallocation: X::a" verbose="Mismatching allocation and deallocation: X::a" cwe="762">
            <location file="main.cpp" line="29" />
        </error>
        <error id="useAutoPointerCopy" severity="style" msg="Copying &apos;auto_ptr&apos; pointer to another does not create two equal objects since one has lost its ownership of the pointer." verbose="&apos;std::auto_ptr&apos; has semantics of strict ownership, meaning that the &apos;auto_ptr&apos; instance is the sole entity responsible for the object&apos;s lifetime. If an &apos;auto_ptr&apos; is copied, the source looses the reference." cwe="398">
            <location file="main.cpp" line="16" />
        </error>
        <error id="useAutoPointerArray" severity="error" msg="Object pointed by an &apos;auto_ptr&apos; is destroyed using operator &apos;delete&apos;. You should not use &apos;auto_ptr&apos; for pointers obtained with operator &apos;new[]&apos;." verbose="Object pointed by an &apos;auto_ptr&apos; is destroyed using operator &apos;delete&apos;. This means that you should only use &apos;auto_ptr&apos; for pointers obtained with operator &apos;new&apos;. This excludes arrays, which are allocated by operator &apos;new[]&apos; and must be deallocated by operator &apos;delete[]&apos;." cwe="664">
            <location file="main.cpp" line="36" />
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config." />
    </errors>
</results>
